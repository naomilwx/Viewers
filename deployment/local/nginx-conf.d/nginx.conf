worker_processes 2;
# error_log   /var/logs/nginx/mydomain.error.log;
pid /var/run/nginx.pid;
include /usr/share/nginx/modules/*.conf; # See /usr/share/doc/nginx/README.dynamic.

events {
    worker_connections 1024; ## Default: 1024
    use epoll; # http://nginx.org/en/docs/events.html
    multi_accept on; # http://nginx.org/en/docs/ngx_core_module.html#multi_accept
}

# Core Modules Docs:
# http://nginx.org/en/docs/http/ngx_http_core_module.html
http {
    default_type application/octet-stream;

    keepalive_timeout 65;
    keepalive_requests 100000;
    tcp_nopush on;
    tcp_nodelay on;


    variables_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    server_tokens off;

    resolver 8.8.8.8 valid=30s ipv6=off;
    resolver_timeout 11s;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    # Nginx `listener` block
    server {
        listen [::]:80;
        listen 80;
        # TODO: configure ssl
        # listen      443 ssl;
        access_log  /var/log/nginx/access.log;

        # Domain to protect
        server_name localhost; # mydomain.com;
        proxy_intercept_errors off;
        # ssl_certificate /etc/letsencrypt/live/mydomain.co.uk/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/mydomain.co.uk/privkey.pem;
        gzip on;
        gzip_types text/css application/javascript application/json image/svg+xml;
        gzip_comp_level 9;
        etag on;

        server_tokens off; # Hides server version num

        #error_page  404              /404.html;

        # auth_basic "Restricted";
        # auth_basic_user_file  /etc/nginx/.htpasswd;

        location /dicom-api/ {
          proxy_http_version 1.1;

          proxy_set_header Host               $host;
          proxy_set_header X-Real-IP          $remote_addr;
          proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto  $scheme;
#         proxy_set_header        Upgrade $http_upgrade;
#         proxy_set_header        Connection "upgrade";

          expires           0;
          add_header        Cache-Control private;

          proxy_pass        http://host.docker.internal:5985/;

          # By default, this endpoint is protected by CORS (cross-origin-resource-sharing)
          # You can add headers to allow other domains to request this resource.
          # See the "Updating CORS Settings" example below
        }

        # Keycloak
        #
        location /auth/ {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;

        # forward full path including /auth
          proxy_pass    http://host.docker.internal:8080;
        }

        location /dicomweb/ {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;

        # forward full path including /dicomweb
          proxy_pass    http://host.docker.internal:3030;
        }

        location / {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_set_header Cache-Control "no-store, no-cache, must-revalidate";
          proxy_set_header 'Cross-Origin-Opener-Policy' 'same-origin';
      	  proxy_set_header 'Cross-Origin-Embedder-Policy' 'require-corp';
          proxy_set_header 'Cross-Origin-Resource-Policy' 'same-origin';

          proxy_pass http://host.docker.internal:3000/;

          # Do not cache sw.js, required for offline-first updates.
          location /sw.js {
            proxy_set_header Cache-Control "no-cache";
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
            expires off;
            access_log off;
          }
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
